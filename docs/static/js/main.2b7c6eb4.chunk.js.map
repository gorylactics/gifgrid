{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","i","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","img","useFetchGif","GifExpertApp","c","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,YAEzB,EAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAoBC,EAApB,KAYA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAY,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAIlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAbpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCLlBG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAK,IAAD,EACtB,MAAM,CACFC,GAAID,EAAEC,GACNC,MAAQF,EAAEE,MACVV,IAAG,UAAGQ,EAAEG,cAAL,aAAG,EAAUC,iBAAiBZ,QATrB,kBAYbM,GAZa,4CAAH,sDCARO,EAAc,SAAC,GAAyB,IAAxBJ,EAAuB,EAAvBA,GAAKC,EAAkB,EAAlBA,MAASV,EAAS,EAATA,IAEvC,OADAc,QAAQC,IAAIN,EAAKC,EAASV,GAEtB,sBAAKgB,UAAU,oCAAf,UACI,6BAAKN,IACL,qBAAKO,IAAKjB,EAAKkB,IAAKR,QCHnBS,EAAU,SAAC,GAAc,IAAbrB,EAAY,EAAZA,SAErB,ECHuB,SAACA,GACxB,MAA0Bd,mBAAS,CAC/BqB,KAAO,GACPe,SAAU,IAFd,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACN1B,EAASC,GACJ0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAMoB,EACNL,SAAU,SAGvB,CAACtB,IAEGuB,EDb4BK,CAAY5B,GAAjCa,EAAd,EAAON,KAAgBe,EAAvB,EAAuBA,QAGvB,OAFAN,QAAQC,IAAIJ,GACZG,QAAQC,IAAIK,GAER,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,oBAAIJ,UAAU,mCAAd,2BACZ,qBAAKA,UAAU,YAAf,SACKL,EAAOJ,KAAI,SAAAkB,GAAG,OACX,cAAC,EAAD,CAEIA,IAAKA,EACLzB,IAAKyB,EAAIzB,IACTU,MAAOe,EAAIf,OAHNe,EAAIhB,aEZpBkB,EAAe,WACxB,MAAgC3C,mBAAS,CAAC,KAA1C,mBAAOc,EAAP,KAAiBf,EAAjB,KACI,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBACA,6BAEKe,EAASS,KAAK,SAAAqB,GAAC,OAAI,cAAC,EAAD,CAAiB9B,SAAU8B,GAAbA,YCJlDC,IAASC,OAAO,cAAC,EAAD,IAAgBC,SAASC,eAAe,W","file":"static/js/main.2b7c6eb4.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategory})=>{\r\n\r\n    const [inputValue , setInputValue] = useState('')\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }; //esta const recibe el valor que se ingresa en el input\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategory(cat => [inputValue, ...cat ] );\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategory  : PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifts = async(category)=>{\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=oiHbqpSMwYCqJNuEwrl9AthJWulF1Uto`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json()\r\n    const gifs = data.map(i =>{\r\n        return{\r\n            id: i.id,\r\n            title : i.title,\r\n            url : i.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id , title ,  url}) => {\r\n    console.log(id , title ,  url)\r\n    return (\r\n        <div className='animate__animated animate__fadeIn'>\r\n            <h3>{title}</h3>\r\n            <img src={url} alt={title}/>\r\n            \r\n        </div>\r\n    )\r\n}","\r\nimport { useFetchGif } from \"../hooks/useFetchGif\"\r\nimport {GifGridItem} from '../components/GifGridItem'\r\n\r\nexport const GifGrid = ({category})=>{  \r\n\r\n    const {data : images , loading}  = useFetchGif(category)\r\n    console.log(images)\r\n    console.log(loading)\r\n    return(\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n            {loading && <h1 className='animate__animated animate__flash'>'Cargando...'</h1>}\r\n            <div className=\"card-grid\">\r\n                {images.map(img =>(\r\n                    <GifGridItem\r\n                        key={img.id} \r\n                        img={img}\r\n                        url={img.url}\r\n                        title={img.title}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport {getGifts} from '../helpers/getGifs'\r\n\r\nexport const useFetchGif = (category) => {\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading : true,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGifts(category)\r\n            .then(img =>{\r\n                setState({\r\n                    data: img,\r\n                    loading : false,\r\n                })\r\n            })\r\n    }, [category]);\r\n\r\n    return state // {data : [] , loading : true}\r\n}\r\n","import { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = ()=>{\r\n    const [category, setCategory] = useState([''])\r\n        return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory={setCategory}/>\r\n            <hr/>\r\n            <ol>\r\n                {/* {category.map( c => <li key={c}> {c}</li> )} */}\r\n                {category.map( c => <GifGrid key={c} category={c} /> )}\r\n            </ol>\r\n        </>)\r\n}\r\n/* {category.map((c)=>{return <li key={c}>{c}</li>})} */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './GifExpertApp'; \n/* Importacion con {} : export const GifExpertApp */\n/* Importacion sin {} : export default GifExpertApp */\n// import GifExpertApp from './GifExpertApp'\n\nReactDOM.render(<GifExpertApp/>,document.getElementById('root'));"],"sourceRoot":""}